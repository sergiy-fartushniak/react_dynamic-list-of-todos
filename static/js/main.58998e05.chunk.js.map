{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","inputFilter","selectFilter","filterHandler","event","target","name","value","setState","this","props","todos","selectUser","selectedUserId","filteredTodos","filter","todo","completed","title","toLowerCase","includes","className","placeholder","type","onChange","map","key","id","classNames","checked","readOnly","userId","onClick","React","PureComponent","request","url","fetch","then","response","json","result","data","CurrentUser","user","a","prevProps","clearUser","email","phone","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58998e05.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.PureComponent {\n  state ={\n    inputFilter: '',\n    selectFilter: 'all',\n  }\n\n  filterHandler = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { todos, selectUser, selectedUserId } = this.props;\n    const { inputFilter, selectFilter } = this.state;\n    const filteredBySelect = todos.filter((todo) => {\n      switch (selectFilter) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n    const filteredTodos = filteredBySelect.filter(todo => todo.title\n      && todo.title.toLowerCase().includes(inputFilter.toLowerCase()));\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div>\n          <input\n            placeholder=\"Please enter text\"\n            type=\"text\"\n            name=\"inputFilter\"\n            value={inputFilter}\n            onChange={this.filterHandler}\n          />\n          <select\n            onChange={this.filterHandler}\n            name=\"selectFilter\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label>\n                  <input type=\"checkbox\" checked={todo.completed} readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames('button', {\n                    'TodoList__user-button': todo.userId !== selectedUserId,\n                    'TodoList__user-button--selected':\n                    todo.userId === selectedUserId,\n                  })}\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(result => result.data || result);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { request } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.PureComponent {\n  state ={\n    user: {},\n  }\n\n  async componentDidMount() {\n    const user = await request(`/users/${this.props.userId}`);\n\n    this.setState({ user });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    request(`/users/${this.props.userId}`)\n      .then(user => this.setState({ user }));\n  }\n\n  render() {\n    const { clearUser } = this.props;\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${user.id}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { request } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await request('/todos');\n\n    this.setState({ todos });\n  }\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clearUser={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}